x <- sample(x = 1:6, size = 1, replace = TRUE, prob = rep (1/6,6))
x
x <- sample(x = 1:6, size = 1, replace = TRUE, prob = rep (1/6,6))
x
x <- sample(x = 1:6, size = 1, replace = TRUE, prob = rep (1/6,6))
x
x <- sample(x = 1:6, size = 1, replace = TRUE, prob = rep (1/6,6))
x
x <- sample(x = 1:6, size = 1, replace = TRUE, prob = rep (1/6,6))
x
x <- sample(x = 1:6, size = 1, replace = TRUE, prob = rep (1/6,6))
x
x <- sample(x = 1:6, size = 1, replace = TRUE, prob = rep (1/6,6))
x
game <- function(x) {
y <- sample(x = 1:6, size = 1, replace = TRUE, prob = rep (1/6,6))
for (i in 1:6) {
if (x==y) {
return(TRUE)
break
} else
if (y==6 | i==6) {
return(FALSE)
break
}
}
}
roll <- function() {
x <- sample(x = 1:6, size = 1, replace = TRUE, prob = rep (1/6,6))
if (x==6) {
return(FALSE)
break
} else return(game(x))
}
result <- data.frame()
for (i in 1:10000) {
result <- rbind(result, roll)
}
game <- function(x) {
y <- sample(x = 1:6, size = 1, replace = TRUE, prob = rep (1/6,6))
for (i in 1:6) {
if (x==y) {
return(TRUE)
break
} else
if (y==6 | i==6) {
return(FALSE)
break
}
}
}
roll <- function() {
x <- sample(x = 1:6, size = 1, replace = TRUE, prob = rep (1/6,6))
if (x==6) {
return(FALSE)
break
} else return(game(x))
}
result <- data.frame()
for (a in 1:10000) {
result <- rbind(result, roll)
}
game <- function(x) {
y <- sample(x = 1:6, size = 1, replace = TRUE, prob = rep (1/6,6))
for (i in 1:6) {
if (x==y) {
return(TRUE)
break
} else
if (y==6 | i==6) {
return(FALSE)
break
}
}
}
roll <- function() {
x <- sample(x = 1:6, size = 1, replace = TRUE, prob = rep (1/6,6))
if (x==6) {
return(FALSE)
break
} else return(game(x))
}
result <- data.frame()
for (a in 1:10000) {
result <- rbind(result, roll())
}
table(result)
result2$TRUE/10000 #The estimated probability that the player wins.
result2 <- table(result)
result2$TRUE/10000
result2 #The estimated probability that the player wins.
win <- table(result$TRUE)
View(result)
win <- table(result)
win
win["TRUE"] #The estimated probability that the player wins.
win["TRUE"]/10000 #The estimated probability that the player wins.
win[,"TRUE"]/10000 #The estimated probability that the player wins.
win["TRUE",]/10000 #The estimated probability that the player wins.
win["TRUE"]/10000 #The estimated probability that the player wins.
game <- function(x) {
y <- sample(x = 1:6, size = 1, replace = TRUE, prob = rep (1/6,6))
for (i in 1:6) {
if (x==y) {
return(TRUE)
break
} else
if (y==6 | i==6) {
return(FALSE)
break
}
}
}
roll <- function() {
x <- sample(x = 1:6, size = 1, replace = TRUE, prob = rep (1/6,6))
if (x==6) {
return(FALSE)
break
} else return(game(x))
}
result <- data.frame()
for (a in 1:10000) {
result <- rbind(result, roll())
}
win <- table(result)
win["TRUE"]/10000 #The estimated probability that the player wins.
game <- function(x) {
y <- sample(x = 1:6, size = 1, replace = TRUE, prob = rep (1/6,6))
for (i in 1:6) {
if (x==y) {
return(TRUE)
break
} else
if (y==6 | i==6) {
return(FALSE)
break
}
}
}
roll <- function() {
x <- sample(x = 1:6, size = 1, replace = TRUE, prob = rep (1/6,6))
if (x==6) {
return(FALSE)
break
} else return(game(x))
}
result <- data.frame()
for (a in 1:10000) {
result <- rbind(result, roll())
}
win <- table(result)
win["TRUE"]/10000 #The estimated probability that the player wins.
game <- function(x) {
y <- sample(x = 1:6, size = 1, replace = TRUE, prob = rep (1/6,6))
for (i in 1:6) {
if (x==y) {
return(TRUE)
break
} else
if (y==6 | i==6) {
return(FALSE)
break
}
}
}
roll <- function() {
x <- sample(x = 1:6, size = 1, replace = TRUE, prob = rep (1/6,6))
if (x==6) {
return(FALSE)
break
} else return(game(x))
}
result <- data.frame()
for (a in 1:10000) {
result <- rbind(result, roll())
}
win <- table(result)
win["TRUE"]/10000 #The estimated probability that the player wins.
is.vector(win)
is.table(win)
game <- function(x) {
y <- sample(x = 1:6, size = 1, replace = TRUE, prob = rep (1/6,6))
for (i in 1:6) {
if (x==y) {
return("Win")
break
} else
if (y==6 | i==6) {
return("Lose")
break
}
}
}
roll <- function() {
x <- sample(x = 1:6, size = 1, replace = TRUE, prob = rep (1/6,6))
if (x==6) {
return("Lose")
break
} else return(game(x))
}
result <- data.frame()
for (a in 1:10000) {
result <- rbind(result, roll())
}
win <- table(result)
win["win"]/10000 #The estimated probability that the player wins.
View(result)
win
win["win"] #The estimated probability that the player wins.
win[,"win"] #The estimated probability that the player wins.
win["win",] #The estimated probability that the player wins.
win["win",] #The estimated probability that the player wins.
win["win"] #The estimated probability that the player wins.
win
win
win$win #The estimated probability that the player wins.
win[,2] #The estimated probability that the player wins.
win
win["Win"] #The estimated probability that the player wins.
win["Win"]/10000 #The estimated probability that the player wins.
install.packages("network")
install.packages("rda")
library(rda)
